

#include<iostream>
#include<SFML/Graphics.hpp>
using namespace std;

int main() {

        //game set up (you'll need these two lines in every game)
        sf::RenderWindow renderWindow(sf::VideoMode(500, 500), "Pong Paddle"); //set up screen
        sf::Event event; //set up event queue

        //paddle1 set up
        sf::RectangleShape paddle1(sf::Vector2f(50.0f, 100.0f));
        paddle1.setFillColor(sf::Color::Blue); //other colors: https://www.sfml-dev.org/documentation/2.5.1/classsf_1_1Color.php
        paddle1.setPosition(80.0f, 80.0f); //set position: this is where the top left corner will be
        sf::RectangleShape paddle2(sf::Vector2f(50.0f, 100.0f));
        paddle2.setFillColor(sf::Color::Red);
        paddle2.setPosition(250.0f, 250.0f);

        //ball set up
        float ballX = 250;
        float ballY = 250;
        float xVel = .01;
        float yVel = .01;
        sf::CircleShape ball(20);
        ball.setFillColor(sf::Color(200, 50, 50));
        ball.setPosition(0, 0);

        //################### HOLD ONTO YOUR BUTTS, ITS THE GAME LOOP###############################################################
        while (renderWindow.isOpen()) {//keep window open until user shuts it down
            while (renderWindow.pollEvent(event)) { //look for events

                //this checks if the user has clicked the little "x" button in the top right corner
                if (event.type == sf::Event::EventType::Closed)
                    renderWindow.close();

                //KEYBOARD INPUT (just one key to start
                if (sf::Keyboard::isKeyPressed(sf::Keyboard::W)) { //checks if "W" is pressed
                    paddle1.move(0, -5); //move the rectangle 5 pixels UP on the y axis
                }
                if (sf::Keyboard::isKeyPressed(sf::Keyboard::S)) {
                    paddle1.move(0, 5);
                    
                }
                if (sf::Keyboard::isKeyPressed(sf::Keyboard::Y)) {
                    paddle2.move(0, -5);
                }
                if (sf::Keyboard::isKeyPressed(sf::Keyboard::F)) {
                    paddle2.move(0, 5);
                }
            }
            //physics section
            //paddle collision
            if (ballX - 30 < paddle1.getPosition().x && ballY > paddle1.getPosition().y && ballY < paddle1.getPosition().y + 100) {
                cout << "paddle1 collision" << endl;
                //eventually add sound effect here
                xVel *= -1;
            }
            if (ballX - 30 < paddle2.getPosition().x && ballY > paddle2.getPosition().y && ballY < paddle2.getPosition().y + 100) {
                cout << "paddle2 collision" << endl;
                //eventually
                xVel *= -1;
            }
                
            //reflect off left and right walls
            if (ballX < 0 || ballX > 470) {
                xVel *= -1;
            }
            if (ballY < 0 || ballY > 470) {
                yVel *= -1;
            }

            // add speed to position
            ballX += xVel;
            ballY += yVel;

            //update ball
            ball.setPosition(ballX, ballY);


            //render section-----------------------------------------
            renderWindow.clear(); //wipes screen, without this things smear
            renderWindow.draw(paddle1); //you gotta drew each object
            renderWindow.draw(paddle2);
            renderWindow.draw(ball);
            renderWindow.display(); //flips memory drawings onto screen

        }//######################## end game loop ###################################################################################

        cout << "goodbye!" << endl;
    } //end game


